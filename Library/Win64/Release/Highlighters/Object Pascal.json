{
   "Highlighter": {
      "Info": {
         "General": {
            "Version": "1.0",
            "Date": "28.10.2015",
            "Sample": [
               "// Hello World in Pascal\r\n",
               "\r\n",
               "program HelloWorld;\r\n",
               "begin\r\n",
               "  writeln('Hello, world!');\r\n",
               "end."
            ]
         },
         "Author": {
            "Name": "Lasse Rautiainen",
            "Mail": "lasse@bonecode.com"
         }
      },
      "MainRules": {
         "Attributes": {
            "Element": "Editor"
         },
         "SubRules": {
            "Range": [
               {
                  "Type": "Comment",
                  "Attributes": {
                     "Element": "Comment"
                  },
                  "TokenRange": {
                     "Open": "{",
                     "Close": "}"
                  }
               },
               {
                  "Type": "Comment",
                  "Attributes": {
                     "Element": "Comment"
                  },
                  "TokenRange": {
                     "Open": "(*",
                     "Close": "*)"
                  }
               },
               {
                  "Type": "Comment",
                  "Attributes": {
                     "Element": "Comment"
                  },
                  "Properties": {
                     "CloseOnEndOfLine": true
                  },
                  "TokenRange": {
                     "Open": "//"
                  }
               },
               {
                  "Type": "String",
                  "Attributes": {
                     "Element": "String"
                  },
                  "Properties": {
                     "CloseOnEndOfLine": true
                  },
                  "TokenRange": {
                     "Open": "'",
                     "Close": "'"
                  }
               },
               {
                  "Type": "Directive",
                  "Attributes": {
                     "Element": "Directive"
                  },
                  "TokenRange": {
                     "Open": "{$",
                     "Close": "}"
                  }
               },
               {
                  "Type": "Method",
                  "Attributes": {
                     "Element": "MethodName"
                  },
                  "Properties": {
                     "AlternativeClose": [
                        "(",
                        "'",
                        "/",
                        "{",
                        ";"
                     ]
                  },
                  "TokenRange": {
                     "Open": "function",
                     "Close": ":"
                  },
                  "SubRules": {
                     "KeyList": [
                        {
                           "Type": "Symbol",
                           "Words": [
                              ":",
                              "("
                           ],
                           "Attributes": {
                              "Element": "Symbol"
                           }
                        }
                     ]
                  }
               },
               {
                  "Type": "Method",
                  "Attributes": {
                     "Element": "MethodName"
                  },
                  "Properties": {
                     "AlternativeClose": [
                        "(",
                        "'",
                        "/",
                        "{"
                     ]
                  },
                  "TokenRange": {
                     "Open": "procedure",
                     "Close": ";"
                  },
                  "SubRules": {
                     "KeyList": [
                        {
                           "Type": "Symbol",
                           "Words": [
                              ";",
                              "("
                           ],
                           "Attributes": {
                              "Element": "Symbol"
                           }
                        }
                     ]
                  }
               },
               {
                  "Type": "ReservedWord",
                  "Attributes": {
                     "Element": "HighlightedBlock",
                     "ParentBackground": false
                  },
                  "TokenRange": {
                     "Open": "asm",
                     "OpenBreakType": "Term",
                     "Close": "end",
                     "CloseBreakType": "Term"
                  },
                  "SubRules": {
                     "Range": [
                        {
                           "Type": "AssemblerComment",
                           "Attributes": {
                              "Element": "Comment"
                           },
                           "TokenRange": {
                              "Open": "{",
                              "Close": "}"
                           }
                        },
                        {
                           "Type": "AssemblerComment",
                           "Attributes": {
                              "Element": "Comment"
                           },
                           "TokenRange": {
                              "Open": "(*",
                              "Close": "*)"
                           }
                        },
                        {
                           "Type": "AssemblerComment",
                           "Attributes": {
                              "Element": "Comment"
                           },
                           "Properties": {
                              "CloseOnEndOfLine": true
                           },
                           "TokenRange": {
                              "Open": "//"
                           }
                        },
                        {
                           "Type": "String",
                           "Attributes": {
                              "Element": "String"
                           },
                           "Properties": {
                              "CloseOnEndOfLine": true
                           },
                           "TokenRange": {
                              "Open": "'",
                              "Close": "'"
                           }
                        },
                        {
                           "Type": "Directive",
                           "Attributes": {
                              "Element": "Directive"
                           },
                           "TokenRange": {
                              "Open": "{$",
                              "Close": "}"
                           }
                        }
                     ],
                     "KeyList": [
                        {
                           "Type": "AssemblerReservedWord",
                           "Words": [
                              "end"
                           ],
                           "Attributes": {
                              "Element": "AssemblerReservedWord",
                              "ParentBackground": false
                           }
                        }
                     ]
                  }
               },
               {
                  "Type": "HexNumber",
                  "Attributes": {
                     "Element": "HexNumber"
                  },
                  "Properties": {
                     "CloseOnTerm": true,
                     "CloseOnEndOfLine": true
                  },
                  "TokenRange": {
                     "Open": "$",
                     "Close": " "
                  }
               },
               {
                  "Type": "Character",
                  "Attributes": {
                     "Element": "Number"
                  },
                  "Properties": {
                     "CloseOnTerm": true,
                     "CloseOnEndOfLine": true
                  },
                  "TokenRange": {
                     "Open": "#",
                     "Close": " "
                  }
               },
               {
                  "Type": "Address",
                  "Attributes": {
                     "Element": "Character"
                  },
                  "Properties": {
                     "CloseOnTerm": true
                  },
                  "TokenRange": {
                     "Open": "@"
                  }
               },
               {
                  "Attributes": {
                     "Element": "Editor"
                  },
                  "TokenRange": {
                     "Open": "property",
                     "Close": ";"
                  },
                  "SubRules": {
                     "Range": [
                        {
                           "Type": "Comment",
                           "Attributes": {
                              "Element": "Comment"
                           },
                           "TokenRange": {
                              "Open": "{",
                              "Close": "}"
                           }
                        },
                        {
                           "Type": "Comment",
                           "Attributes": {
                              "Element": "Comment"
                           },
                           "TokenRange": {
                              "Open": "(*",
                              "Close": "*)"
                           }
                        },
                        {
                           "Type": "Comment",
                           "Attributes": {
                              "Element": "Comment"
                           },
                           "Properties": {
                              "CloseOnEndOfLine": true
                           },
                           "TokenRange": {
                              "Open": "//"
                           }
                        },
                        {
                           "Type": "String",
                           "Attributes": {
                              "Element": "String"
                           },
                           "Properties": {
                              "CloseOnEndOfLine": true
                           },
                           "TokenRange": {
                              "Open": "'",
                              "Close": "'"
                           }
                        }
                     ],
                     "KeyList": [
                        {
                           "Type": "ReservedWord",
                           "Words": [
                              "default",
                              "index",
                              "read",
                              "write"
                           ],
                           "Attributes": {
                              "Element": "ReservedWord"
                           }
                        }
                     ]
                  }
               }
            ],
            "KeyList": [
               {
                  "Type": "ReservedWord",
                  "Words": [
                     "absolute",
                     "abstract",
                     "and",
                     "array",
                     "as",
                     "assembler",
                     "automated",
                     "begin",
                     "case",
                     "cdecl",
                     "class",
                     "const",
                     "constructor",
                     "contains",
                     "default",
                     "deprecated",
                     "destructor",
                     "dispid",
                     "dispinterface",
                     "div",
                     "do",
                     "downto",
                     "dynamic",
                     "else",
                     "end",
                     "except",
                     "exports",
                     "external",
                     "far",
                     "file",
                     "finalization",
                     "finally",
                     "for",
                     "forward",
                     "goto",
                     "if",
                     "implementation",
                     "implements",
                     "in",
                     "inherited",
                     "initialization",
                     "inline",
                     "interface",
                     "is",
                     "label",
                     "library",
                     "message",
                     "mod",
                     "near",
                     "nil",
                     "nodefault",
                     "not",
                     "object",
                     "of",
                     "on",
                     "or",
                     "out",
                     "overload",
                     "override",
                     "package",
                     "packed",
                     "pascal",
                     "platform",
                     "private",
                     "program",
                     "property",
                     "protected",
                     "public",
                     "published",
                     "raise",
                     "record",
                     "register",
                     "reintroduce",
                     "repeat",
                     "requires",
                     "resourcestring",
                     "safecall",
                     "set",
                     "shl",
                     "shr",
                     "stdcall",
                     "stored",
                     "strict",
                     "string",
                     "stringresource",
                     "then",
                     "threadvar",
                     "to",
                     "try",
                     "type",
                     "unit",
                     "until",
                     "uses",
                     "var",
                     "while",
                     "virtual",
                     "with",
                     "writeonly",
                     "xor"
                  ],
                  "Attributes": {
                     "Element": "ReservedWord"
                  }
               },
               {
                  "Type": "Method",
                  "Words": [
                     "function",
                     "procedure"
                  ],
                  "Attributes": {
                     "Element": "Method"
                  }
               },
               {
                  "Type": "Symbol",
                  "Words": [
                     "..",
                     ":",
                     ";",
                     "<",
                     ">",
                     "=",
                     "/",
                     "*",
                     ".",
                     ",",
                     "-",
                     "+",
                     "(",
                     ")",
                     "[",
                     "]"
                  ],
                  "Attributes": {
                     "Element": "Symbol"
                  }
               },
               {
                  "Type": "AssemblerReservedWord",
                  "Words": [
                     "asm"
                  ],
                  "Attributes": {
                     "Element": "AssemblerReservedWord"
                  }
               }
            ],
            "Set": [
               {
                  "Type": "Numbers",
                  "Symbols": "0123456789",
                  "Attributes": {
                     "Element": "Number"
                  }
               },
               {
                  "Type": "Float",
                  "Symbols": ".0123456789",
                  "Attributes": {
                     "Element": "Number"
                  }
               }
            ]
         }
      }
   },
   "CodeFolding": {
      "Ranges": [
         {
            "SkipRegion": [
               {
                  "OpenToken": "'",
                  "CloseToken": "'",
                  "RegionType": "String"
               },
               {
                  "OpenToken": "//",
                  "RegionType": "SingleLine"
               },
               {
                  "OpenToken": "{",
                  "CloseToken": "}",
                  "RegionType": "MultiLine",
                  "NextCharIsNot": "$"
               },
               {
                  "OpenToken": "(*",
                  "CloseToken": "*)",
                  "RegionType": "MultiLine"
               }
            ],
            "FoldRegion": [
               {
                  "OpenToken": "BEGIN",
                  "CloseToken": "END"
               },
               {
                  "OpenToken": "REPEAT",
                  "CloseToken": "UNTIL"
               },
               {
                  "OpenToken": "TRY",
                  "CloseToken": "END",
                  "Properties": {
                     "OpenTokenBeginningOfLine": true
                  }
               },
               {
                  "OpenToken": "CASE",
                  "CloseToken": "END"
               },
               {
                  "OpenToken": "ASM",
                  "CloseToken": "END",
                  "Properties": {
                     "OpenTokenBeginningOfLine": true
                  }
               },
               {
                  "OpenToken": "CLASS",
                  "CloseToken": "END",
                  "Properties": {
                     "NoSubs": true,
                     "SkipIfFoundAfterOpenToken": [
                        ";",
                        "FUNCTION",
                        "PROCEDURE"
                     ]
                  }
               },
               {
                  "OpenToken": "RECORD",
                  "CloseToken": "END",
                  "Properties": {
                     "NoSubs": true
                  }
               },
               {
                  "OpenToken": "INTERFACE",
                  "CloseToken": "IMPLEMENTATION",
                  "Properties": {
                     "OpenTokenBeginningOfLine": true
                  }
               },
               {
                  "OpenToken": "INTERFACE",
                  "CloseToken": "END",
                  "Properties": {
                     "NoSubs": true,
                     "SkipIfFoundAfterOpenToken": [
                        ";"
                     ]
                  }
               },
               {
                  "OpenToken": "IMPLEMENTATION",
                  "CloseToken": "END.",
                  "Properties": {
                     "OpenTokenBeginningOfLine": true,
                     "OpenIsClose": true,
                     "SharedClose": true
                  }
               },
               {
                  "OpenToken": "UNIT",
                  "CloseToken": "END.",
                  "Properties": {
                     "OpenTokenBeginningOfLine": true,
                     "SharedClose": true
                  }
               },
               {
                  "OpenToken": "PROGRAM",
                  "CloseToken": "END.",
                  "Properties": {
                     "OpenTokenBeginningOfLine": true,
                     "SharedClose": true
                  }
               },
               {
                  "OpenToken": "$REGION",
                  "CloseToken": "$ENDREGION",
                  "Properties": {
                     "OpenTokenEnd": "}",
                     "ShowGuideLine": false
                  }
               }
            ]
         }
      ]
   },
   "MatchingPair": {
      "Pairs": [
         {
            "OpenToken": "(",
            "CloseToken": ")"
         },
         {
            "OpenToken": "[",
            "CloseToken": "]"
         },
         {
            "OpenToken": "begin",
            "CloseToken": "end"
         },
         {
            "OpenToken": "case",
            "CloseToken": "end"
         },
         {
            "OpenToken": "asm",
            "CloseToken": "end"
         },
         {
            "OpenToken": "try",
            "CloseToken": "end"
         },
         {
            "OpenToken": "for",
            "CloseToken": "do"
         },
         {
            "OpenToken": "repeat",
            "CloseToken": "until"
         },
         {
            "OpenToken": "while",
            "CloseToken": "do"
         },
         {
            "OpenToken": "if",
            "CloseToken": "then"
         }
      ]
   },
   "CompletionProposal": {
      "SkipRegion": [
         {
            "OpenToken": "'",
            "CloseToken": "'",
            "RegionType": "String"
         },
         {
            "OpenToken": "//",
            "RegionType": "SingleLine"
         },
         {
            "OpenToken": "{$",
            "CloseToken": "}",
            "RegionType": "MultiLine"
         },
         {
            "OpenToken": "{",
            "CloseToken": "}",
            "RegionType": "MultiLine"
         },
         {
            "OpenToken": "(*",
            "CloseToken": "*)",
            "RegionType": "MultiLine"
         }
      ]
   }
}
